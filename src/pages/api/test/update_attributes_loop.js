import dbConnect from "../../../lib/dbConnect";
import NFT from "../../../Models/NFT";
import limiter from "../limiter";

export default async function handler(req, res) {
    const { method } = req;
    await dbConnect();

    limiter(req, res, async () => {
        switch (method) {
            case "PUT":
                try {
                    const {
                        NFTAddress,
                        ownerAddress,
                        managerAddress,
                        nft_image,
                        nft_metadata,
                        name,
                        description,
                        attributes
                    } = req.body;

                    const nftAddresses =
                        ["0:bc531bdc3816c16851efab34f0a4716e72340cf4ca1d7a2ab83fb57a7b7ca5be", "0:b7df7e3f2b069f9abecd4e70e71d7a0199111e1e95f32ed5b8f91dcdb4fcbf4a", "0:b4a64e65d13fc5ccf30322e35bfbded749e6e30772982ba3f2e38bf9a1f29ddb", "0:b98ee80a0546528c77792035147f64466ee161db7de9e7bc3cf49f25386ec1d9", "0:b4f4cb750508e16d92d0cabd0ecd760fe5e73b8aa86f67f94b050f15587f451a", "0:bc2bd6bb4523fd89d8b89dfa5286b841b385d9a019edbbd0ef2b10dcf779fba2", "0:b11949fe3f7fb67bac48540bec8c57fda853fc548ecd28c01ccec7090e0507f2", "0:b35278679f1051fb27af0727ce7c421656b773fb25a0f97d07434b97b3eed0b2", "0:b1d721ce24fd788c766ca0433b2b91c61c733510f7c648b4190e970a7160adcc", "0:bc85258ce7f8aad386bd262d17fe1737831fdd9d85fe6f9c553e4c4cad1414b0", "0:b081ea68b88bc70dc0d608149e8496b8866e27a81b5e8104fc51d11620d616d0", "0:b8c6dfd391c8836f02472da55c6d0f44f0ed8a39c3eb8d83ffcc28c0ef630b5d", "0:b862bea915f45af06e3213512bd6c8da4309deab973fd61a8207f9c7c8f12bcf", "0:cd13a7388b8597e9d61c6ca31c82808eac3caccf3babfc8f1670b7fec5b3e9be", "0:e5828f57bc84fe13b48ace5de47ca396d1b3bc160cdba164e697949827520fae", "0:c1bacfcc9a67a83016873083dc08daaae6a37824ee8bb473ba8faad747471fe6", "0:c01de7737b4d74022cf7f18fc934466bda75121959c9b3522f131c49a518b2ed", "0:ec2d7c7b1645b8dd1929ff2d6cd700771c610442fd7877c15f477e178561bb08", "0:da8c223b1dedc39ea8d726c589a64aa63ed3608836e28d4856171e0f749bbe0f", "0:e0e5be0ada083e62960b633810ecd338b3006ec8b252952b6ef0c58d71274817", "0:e453488a3057261e5a706241d2ab293b0bd62fd2a9abbcd612c433bb0a175780", "0:ee6d9da984ff862ddba766f739f57f182f1d6307a56d3aeff9601dc1fadc5e1e", "0:c0baa81e1024804e59d0ec36c1fe6c364757bb12ff25c72648ec032ea6872368", "0:e7cc7a67217c98c1c4f67985c9378128cee98a9502b58c6afb60f25ce940d805", "0:e2c9fdefe34bd91c531025491fc861f00688017596582c864e281503cc0d9e03", "0:cd802017659b2d6022c8156078561939e2dbfbf9172e1cc6b42cccd1ec831c3f", "0:cdda1074b93f35d79dd7f4550966e647c05cf2e2fb5f60fed09d7e5fa1c3aa80", "0:d5ce1fad00393481070f2ccb56effdc1e3b8ca549c1874d7dad24a7be8d84309", "0:c4792e3eb3afb67609015515cc916791a9e8ebfc7425cbd8b116c28f6fee40a9", "0:cef64c9206274336443e86a6683daee04418aaf87d06eda8525d8777a3261dc4", "0:e5fe7f6d17b6ef232095ab8ae4d6dd7c4325e0636305f5dab35921037a700a22", "0:ff584457aa0610e4cbc4f227bede063e502cc7ee1617c3a71639e6dc6ab4cb78", "0:f62b70be89a6c8a3de4e50fc7470e58f730d1771f7aca3e18683a828e1c08f4b", "0:fd10707f3ab34872b9a3654d13c7529fe0e37e66ed768fdb79b73ae22a71573f", "0:fbf287de723206fd33a8a2b2b20196d84ec51f07477e63d02cbc3daa6f149c32", "0:fc95c184b9ad7aeab05bd76460bde3030ca27788623f501036edbd8b81d2b09b", "0:f04439bea3acfcfd8b8d2b434c9649d65250d21e27d54003540891de0e059c89", "0:fcca2bfd562b2706f9a2ba637b63d740500163cdfeac3f7fdab56ab4aad193f9", "0:f41ba30dd8c2ed7bc350d0f973dbbb339910c10fddc8dd9bb34ae05e06ac0899", "0:f02f47d13df71ffb05ea836b1923699fec88a4836d41679cb382113d387cd1b7", "0:adc7d6f5a96653b01b5e65806396da60340dbad137b6b425c2ea5e5a7e73fa5d", "0:aeaae2663a13b30bd1fa132573b1386b13e0a2c65a1d200dd71bce31292af6f7", "0:af308c20350104e2442898aae351ab454f8b5142f957921c9aa8f16214692af9", "0:b09a5f6ca371e506dd1a1507b0c2ce9840562ed0d151f87a70ac0ce56da54c2b", "0:ba0811332dafa18e891fbb31883b7564fe759316c5e236ed6d7bd50992776539", "0:af72e60cc9fcc2e7f00738227352025eb0094bfcbe32b703f8d9ceb909a85986", "0:ba86578134b5412a8f0529bb4e0e7ea7e9d8df7761d1bb9a3d17da763cf928fd", "0:b96caf4fbebf43ab8dbf2c71a9f5873e48e09e10cc05179b0757ff1f2970c0a1", "0:af2f86edc284151a2e5d06d5abc5de1093d6a3432c2d976bd942b34901d86d92", "0:b3f6ab81f93904de12b5eaafd8c5c62e6db7957f39e37c63ea729de44e531c6e", "0:b1ba497f6871ad794b4c95fbcca9701dfba64eebe7d6f265e0753a1d8536e9f2", "0:ba2b7b466c20aacae7e5f62a841dc56f3e0b0187393c0ad94cdf6c867e766e12", "0:c83b8a88188a2a88181f63770bc7effd1dd80528c99a4ee32909ffe7db8f75e2", "0:cc1948b48e2d2fa0f04add1aece99a4f725223fe246a00a516dc35cf9742c986", "0:c2336c6618aa5f5123357fdbb255182d55a19f68d8d86703cee49f66b616bb95", "0:c62155b6c123af2157bea88826675c3d3ff703c6b54e78e906f3e43fa3636964", "0:c9fb786f8372edd4efb694be08fa122fc2ba625b945166840d353e39da76fa38", "0:c2f5736f532d0027da18d5f8e167b95345755f4551672643764fbeed2e34e741", "0:c985d3ffe8b79d9279fba3fdce6e8ff440f1cf35d1f34102c73cbdaa7ba43614", "0:c245b387c6928f0412632103e9b2edede188d40da52956f9c92e7bb28e062d09", "0:c2aed83e7428bf659b5b00164b2e1037ef11696473c65ead738ec7404cb636b0", "0:c60cd21ef7321ecc0c44ee31f3e483587ed691b38b115f86900ec53388baeab8", "0:bea8ba31d3fa2a43c224446453731f5e829d4133028b69e56048bd1a0ce21072", "0:cc85066b881ed22f042fb50f1cd0c29abee31b74c7ce9af461eea5f6cddb7a72", "0:c8af91c5436a8e135553d89295a9e051134e39db577c0f4eebb5e127cbddd13a", "0:bd88ace507549f777941c006782ad8ddc4658b8cd23c6344f1e4cb9e5bc606de", "0:cb7395b1a1284070bd4aa6b8203e0e960ea1d68116b8e93386e5d7b85dbc5514", "0:dcd3efcbb24b5513ab36e45480a645ddab0375fc08057134c07193e7b4ec6b09", "0:d51a88531d4d2ff82736baaf2dc53626ad6e3ca6800692f8c18e99f6bb6cd2ad", "0:d1b68c06c26e12c06dd347b052623b14c87ffef9c2bf98fda4f9225b3de3c4d0", "0:e30a6b01e3efabd0615c16c7591fe69fa0af7760f1c15c8c80123f41a0b0615f", "0:d2fa277d03e39b59df6148d24f0f31252825b8744c35a120ffef7ee84aefa8a3", "0:d6c2d0aba52088eb0b5156a07f088c8dba99860d121c66a8caf89fe290705c7b", "0:ce5dc3e6b0f335246b3ccc826272610a861a8e394ac0279ac92e8881087b3e90", "0:ceca78a116bbd73089d8cf942097a5c0d9d34f15157cbad9ce2678b8b0d8e941", "0:d6a9bc447172622d52bbcf0eb2e60de3c49152b59ddeaa02eb4782164a50657d", "0:e32b69ad10b2d228fad58ed1ada0429a9e8f0e5b67503e331e783c3258f25267", "0:f331f84b4a9a770015c18dc1dabdb7fc0b01466af8ac99f8efb37a62b3fd6139", "0:e6091b42c5f2e1b7e4abb2e96b0881c0628f7c85a8b9e8c8347c541226d79824", "0:f11c913eefe9c75d98bba9ac8c996836db76ce22ff4022a47af5a472803be720", "0:e963bfc773f47531d80768017d440abc20bce077bd8173e69c252eb631fc4090", "0:ece6828da354bde02e922386404345d2131685f84afb62d9f277d060f2e8bee3", "0:ef3d43ec33edaba86c1878f264dba4e64e6cc68408a57f1dedd50255c2292e74", "0:f1807f226467a7cf0963022b2be6af5957cbf79a9e521b50d3ff3cf6be7e6c81", "0:e72c9513443016fef577c39ea7b5433acad8ce0742955c05c8c1c705a6733cf1", "0:e8b00cf84b2a5e7d66250468f12fb126232e5ab0439de4ccbbec6310dd0f11c3", "0:f8f33a89e7244d9ae15d9259d65f302bbf3989afe18f5cc26a7c06c5d62fdd27", "0:fcad9892ae9c7454c7df45db90c4cba45ec817a1110afe3b95b1b786dc7db7d5", "0:fb2e2e51c58e93f96e3b9529ad1a555fcd757882812043952c791b22b5ffc868", "0:f46e80f8d63c2e9c41ddac1c86f67ab94c5af3dab87d914dea77bdfe78f10dbd", "0:fe8cdf1919d4cf770482b35a341a774005d9c0485bb66781f9065ebfa3a38b07", "0:fdb346f622d59d64f8c1f3cd4342ba4c2c3f174da54f2814e3dd4bf3972108d3", "0:fbc06bd37a59a0ee68a8c394cd9cac7bda571daf8425276590662d7d4108a497", "0:fab8f0975f4a84f67cb9d603091cc94a7dd09b876ec0cb687b0e08fd97abd2b4", "0:fb2ff6bc8d1e4fc703f6afc3fbde1acbae16b55a37669348d7dcc531dd29d946", "0:f99c492018e594ed0476008648a098fd541283587bcbb8d70dbb7b63b7bc5cf9", "0:b37ee49d47ad473d67eb49181169e90504f8389840acd794a2ade99b9d8f9790", "0:b3b8db246057c7bf15c83c79166c34a1c8ba38bbce9428aa33bee87682b7a6e2", "0:af40857d5d92fb18861556f48748dc78695d7366c60c2e4f137439ae6b916918", "0:b600500b8c5654376223d1c0b78649e5b724872a9f966aa1d60616cc53b2995a", "0:bdd4ebd48f51c3de97199c8525727fabdd52336ccc06bbf54b7099fcb53c4f43", "0:bbf0df08f5c2718b09fcc00dc31a5548d596df6aafdc99c37ff50165487f21cf", "0:bde44793ce5af0c8f2736853f38e106a06cd3a17182c0a788f5a7b194de527b1", "0:b96e5e01b85e0407dbc0f824a0c7089412d1901ab718dbc2143c7900d1e030cc", "0:c3c95a9a9a2c33f5c8555fae8404506ae97399dc43b8767932201c4891bb4537", "0:c3ba63e49557aaa7745f1fa5efdc69973234628de613cf7d8262ef6d6d7991f5", "0:cc5dddfc25d2a5170c2dabf5143880450fee66184a8d793586463a6633181b1f", "0:c87554405ed74af563f311bf36cd8cd4681459154f5b63083c4e3a0a90cbac26", "0:cbf8a7af39280c827e679d8b0cc21a2add7f02d79e0300127b9ca2c794e4874c", "0:c3845094e98bf93058f4faea452438c2073916117e61fea5098e600875b89aff", "0:d98cedbfb40466df069722abf0148410bb54298d16e35570b8add0901f9c0b57", "0:d3a472ae0b22bcdd7a8cc1fc6412d7eb1f1388ec9dbd59c8caa20f493f9907df", "0:e813ced0949ab3b9397a0e8efac35e252d801f4353129172cfc9c406f0b8341d", "0:e1c15cd71caa44d391ab12fa1763538b9e228bb95733332b68c26d16397f8a9a", "0:eb4038a40d06238a2283e81b2208656081762f895390c102ef4f3110c1103352", "0:ef793562a320e136e6ef932a0a98b1304c6b5dffa722945938dc5e89f82e0736", "0:f57849d1b2240207f77175a384a2c1a0354ac31fd5a5ad3a4bb94ef00fe216fd", "0:efbf65a0274ee0018be308b2cd4142c4b2cce065b28472508944fd236094caea", "0:f4b9b2c7c46b5c93b55c45c705ca3a0fc3b521aa7197f3aa1a34168897e8073b", "0:eeeb3581f576facde9bcdf2f182c346617b6e72bc18626fb6d076952579535a4", "0:fa64454ede513ad9ceed60ba698930b1ceb611356852700f962c61cde07d0781", "0:fba0f6cfa70abad323444e5134007f4b50fd832bff16bbf2bd2c576fd68fc803", "0:f6bb844eb653450381018f7dd44df01b70c4b8aa2e9dec55420f41bd096e24bb", "0:fc63f08a2c4f7adc6a84453721d886c139df69176043c19d9e45bbde543788d4"];

                    // Loop through each NFT address
                    for (let i = 0; i < nftAddresses.length; i++) {
                        const NFTAddress = nftAddresses[i];

                        // Find the NFT corresponding to the current address
                        let nft = await NFT.findOne({ NFTAddress });
                        if (!nft)
                            return res.status(400).json({ success: false, data: `Cannot Find NFT with Address: ${NFTAddress}` });

                        // Check if attributes array exists and is not empty
                        if (Array.isArray(nft.attributes) && nft.attributes.length > 0) {
                            // Update the existing attributes array with new data
                            nft.attributes = attributes;
                        } else {
                            // If attributes array doesn't exist or is empty, assign it directly
                            nft.attributes = attributes;
                        }

                        await nft.save();
                    }

                    return res.status(200).json({ success: true, data: "NFTs updated successfully" });
                } catch (error) {
                    res.status(400).json({ success: false, data: error.message });
                }
            default:
                res.status(400).json({ success: false });
                break;
        }
    });
}
